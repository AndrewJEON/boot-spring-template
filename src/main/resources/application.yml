info:
  group: "@project.groupId@"
  artifact: "@project.artifactId@"
  name: "@project.name@"
  description: "@project.description@"
  version: "@project.version@"
  java-version: "@java.version@"
  contact: 정성현 <hashmap27@gmail.com> or <public27@naver.com>
  application-name: ${spring.application.name}

server:
  port: 8081
  servlet:
    session:
      cookie:
        http-only: true #브라우저 접근불가 쿠기여부
        secure: true  #HTTPS전용쿠키여부
  compression:
    enabled: true
  error:
    whitelabel:
      enabled: false

spring:
  application:
    name: "@project.artifactId@"
  http:
    encoding:
      charset: UTF-8  #HTTP 요청과 응답에 사용할 문자 집합, 명시적인 헤더 설정이 없을 때는 콘텐츠 타입에 추가(default: UTF-8)
      enabled: true   #HTTP인코딩 지원 활성화 여부(default: true)
      force: true     #HTTP 요청과 응답의 인코딩으로 문자 집합을 강제로 구성할지 여부(default: true)
  mvc:
    view:
      prefix: /WEB-INF/views/ #Spring MVC 뷰 접두어
      suffix: .jsp            #Spring MVC 뷰 접미어
  devtools:
    livereload:
      enabled: false  #livereload.com 호환서버 활성화 여부 
    restart:
      exclude: static/**, templates/**, mybatis/**  #완전한 재시작 발동에서 제외할 패턴
      enabled: false  #자동 재시작 활성화 여부

#[Spring jackson 관련 설정]
  jackson:
    date-format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"             #날짜 포맷 문자열 이나 완전한 날짜 포맷 클래스 이름
    joda-date-time-format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"   #Joda날짜.시간 포맷 문자열. 이 값을 구성하지 않을 떄 포맷 문자열이 구성되어 있다면 date-format이 기본값으로 사용됨.
    time-zone: Asia/Seoul   #날짜 포매팅시 사용할 시간대. Asia/Seoul 또는 GMT+10과 같이 인식 가능한 시간대 식별자로 지정.
    default-property-inclusion: non-null
    serialization:    #jackson 자바 객체 직렬화 기능의 옵션 (비)활성
      write-dates-as-timestamps: false
      write-dates-with-zone-id: false
    deserialization:  #jackson 자바 객체 역직렬화 기능의 옵션 (비)활성
      fail-on-unknown-properties: false
    mapper:   #일반적인 jackon 기능의 옵션 (비)활성
      sort-properties-alphabetically: false

#[Mybatis 설정]
mybatis:
  configuration:
    cache-enabled: true   #설정에서 각 매퍼에 설정된 캐시를 전역적으로 사용할지 말지에 대한 여부
    lazy-loading-enabled: false   #지연로딩을 사용할지에 대한 여부
    multiple-result-sets-enabled: true    #한개의 구문에서 여러개의 ResultSet을 허용할지의 여부
    use-column-label: true    #칼럼명 대신에 칼럼라벨을 사용
    use-generated-keys: false   #생성된 키에 대한 JDBC 지원여부
    auto-mapping-behavior: partial  #칼럼을 필드/프로퍼티에 자동으로 매핑할지와 방법에 대해 명시. PARTIAL은 간단한 자동매핑만 할뿐 내포된 결과에 대해서는 처리하지 않는다. FULL은 처리가능한 모든 자동매핑을 처리한다.
    default-executor-type: simple #디폴트 실행자(executor) 설정. SIMPLE 실행자는 특별히 하는 것이 없다. REUSE 실행자는 PreparedStatement를 재사용한다. BATCH 실행자는 구문을 재사용하고 수정을 배치처리한다.
    default-statement-timeout: 25 #데이터베이스로의 응답을 얼마나 오래 기다릴지를 판단하는 타임아웃을 설정
    safe-row-bounds-enabled: false  #중첩구문내 RowBound사용을 허용 허용한다면 false로 설정
    map-underscore-to-camel-case: true  #전통적인 데이터베이스 칼럼명 형태인 A_COLUMN을 CamelCase형태의 자바 프로퍼티명 형태인 aColumn으로 자동으로 매핑하도록 함
    local-cache-scope: session  #순환참조를 막거나 반복된 쿼리의 속도를 높히기 위해 로컬캐시를 사용. SESSION을 사용해서 동일 세션의 모든 쿼리를 캐시, STATEMENT 로 설정하면 로컬 세션은 구문 실행할때만 사용하고 같은 SqlSession에서 두개의 다른 호출사이에는 데이터를 공유하지 않는다.
    jdbc-type-for-null: nvarchar  #JDBC타입을 파라미터에 제공하지 않을때 null값을 처리한 JDBC타입을 명시
    lazy-load-trigger-methods:  #지연로딩을 야기하는 객체의 메소드를 명시(메소드 이름을 나열하고 여러개일 경우 콤마(,) 로 구분)
      - equals, clone, hashCode, toString
    log-prefix: "[SQL]" #로거(logger) 이름에 추가할 접두사 문자열을 명시
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl #사용할 로깅 구현체를 명시. 이 설정을 사용하지 않으면 마이바티스가 사용할 로깅 구현체를 자동으로 찾는다.
  type-handlers-package: com.boot.template.framework.mybatis.spring.typehandler
  mapper-locations:
  - "classpath:mybatis/config/mybatis-mapper-mysql.xml"
  - "classpath:mybatis/mapper/**/*.xml"
  - "mybatis/mapper/**/*.xml"

#[Logging 설정]
logging:
  config: classpath:logback-spring.xml